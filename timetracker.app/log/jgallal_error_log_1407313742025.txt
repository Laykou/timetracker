net.lingala.zip4j.exception.ZipException: zip file does not exist, cannot set comment for zip file
	at net.lingala.zip4j.core.ZipFile.setComment(ZipFile.java:861)
	at com.jci.timetracker.utils.ZipUtils.zipStreamWithAESEncryption(ZipUtils.java:64)
	at com.jci.timetracker.utils.TrackerBackup.saveFile(TrackerBackup.java:238)
	at com.jci.timetracker.utils.TrackerBackup.createAction(TrackerBackup.java:143)
	at com.jci.timetracker.models.User$1.call(User.java:202)
	at com.jci.timetracker.requester.ApiRequest$ApiResponseHandler.handleResponse(ApiRequest.java:186)
	at com.jci.timetracker.requester.ApiRequest$ApiResponseHandler.handleResponse(ApiRequest.java:1)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:85)
	at com.jci.timetracker.requester.ApiRequest.execute(ApiRequest.java:117)
	at com.jci.timetracker.requester.RequestsWorkerLogger.run(RequestsWorkerLogger.java:197)
net.lingala.zip4j.exception.ZipException: zip file does not exist, cannot set comment for zip file
	at net.lingala.zip4j.core.ZipFile.setComment(ZipFile.java:861)
	at com.jci.timetracker.utils.ZipUtils.zipStreamWithAESEncryption(ZipUtils.java:64)
	at com.jci.timetracker.utils.TrackerBackup.saveFile(TrackerBackup.java:238)
	at com.jci.timetracker.utils.TrackerBackup.createAction(TrackerBackup.java:143)
	at com.jci.timetracker.models.User$1.call(User.java:202)
	at com.jci.timetracker.requester.ApiRequest$ApiResponseHandler.handleResponse(ApiRequest.java:186)
	at com.jci.timetracker.requester.ApiRequest$ApiResponseHandler.handleResponse(ApiRequest.java:1)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:85)
	at com.jci.timetracker.requester.ApiRequest.execute(ApiRequest.java:117)
	at com.jci.timetracker.requester.RequestsWorkerLogger.run(RequestsWorkerLogger.java:197)
net.lingala.zip4j.exception.ZipException: zip file does not exist, cannot set comment for zip file
	at net.lingala.zip4j.core.ZipFile.setComment(ZipFile.java:861)
	at com.jci.timetracker.utils.ZipUtils.zipStreamWithAESEncryption(ZipUtils.java:64)
	at com.jci.timetracker.utils.TrackerBackup.saveFile(TrackerBackup.java:238)
	at com.jci.timetracker.utils.TrackerBackup.createAction(TrackerBackup.java:143)
	at com.jci.timetracker.utils.TrackerBackup.updateAction(TrackerBackup.java:157)
	at com.jci.timetracker.models.TrackedAction.save(TrackedAction.java:269)
	at com.jci.timetracker.models.TrackedAction.setComment(TrackedAction.java:165)
	at com.jci.timetracker.view.gui.objects.TrackedActionInTable.setColumn(TrackedActionInTable.java:139)
	at com.jci.timetracker.view.gui.window.trackedActionsTable.TrackedActionsTableModel.setValueAt(TrackedActionsTableModel.java:174)
	at javax.swing.JTable.setValueAt(Unknown Source)
	at javax.swing.JTable.editingStopped(Unknown Source)
	at javax.swing.AbstractCellEditor.fireEditingStopped(Unknown Source)
	at javax.swing.DefaultCellEditor$EditorDelegate.stopCellEditing(Unknown Source)
	at javax.swing.DefaultCellEditor.stopCellEditing(Unknown Source)
	at javax.swing.JTable$GenericEditor.stopCellEditing(Unknown Source)
	at javax.swing.DefaultCellEditor$EditorDelegate.actionPerformed(Unknown Source)
	at javax.swing.JTextField.fireActionPerformed(Unknown Source)
	at javax.swing.JTextField.postActionEvent(Unknown Source)
	at javax.swing.JTextField$NotifyAction.actionPerformed(Unknown Source)
	at javax.swing.SwingUtilities.notifyAction(Unknown Source)
	at javax.swing.JComponent.processKeyBinding(Unknown Source)
	at javax.swing.JComponent.processKeyBindings(Unknown Source)
	at javax.swing.JComponent.processKeyEvent(Unknown Source)
	at java.awt.Component.processEvent(Unknown Source)
	at java.awt.Container.processEvent(Unknown Source)
	at java.awt.Component.dispatchEventImpl(Unknown Source)
	at java.awt.Container.dispatchEventImpl(Unknown Source)
	at java.awt.Component.dispatchEvent(Unknown Source)
	at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source)
	at java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(Unknown Source)
	at java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(Unknown Source)
	at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source)
	at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source)
	at java.awt.Component.dispatchEventImpl(Unknown Source)
	at java.awt.Container.dispatchEventImpl(Unknown Source)
	at java.awt.Window.dispatchEventImpl(Unknown Source)
	at java.awt.Component.dispatchEvent(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$400(Unknown Source)
	at java.awt.EventQueue$2.run(Unknown Source)
	at java.awt.EventQueue$2.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)
	at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
